// Code generated by MockGen. DO NOT EDIT.
// Source: message_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	model "github.com/farhanramadhan/messages-api/model"
	gomock "github.com/golang/mock/gomock"
)

// MockMessageRepository is a mock of MessageRepository interface.
type MockMessageRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMessageRepositoryMockRecorder
}

// MockMessageRepositoryMockRecorder is the mock recorder for MockMessageRepository.
type MockMessageRepositoryMockRecorder struct {
	mock *MockMessageRepository
}

// NewMockMessageRepository creates a new mock instance.
func NewMockMessageRepository(ctrl *gomock.Controller) *MockMessageRepository {
	mock := &MockMessageRepository{ctrl: ctrl}
	mock.recorder = &MockMessageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageRepository) EXPECT() *MockMessageRepositoryMockRecorder {
	return m.recorder
}

// GetAllMessages mocks base method.
func (m *MockMessageRepository) GetAllMessages() []model.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMessages")
	ret0, _ := ret[0].([]model.Message)
	return ret0
}

// GetAllMessages indicates an expected call of GetAllMessages.
func (mr *MockMessageRepositoryMockRecorder) GetAllMessages() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMessages", reflect.TypeOf((*MockMessageRepository)(nil).GetAllMessages))
}

// InsertMessage mocks base method.
func (m *MockMessageRepository) InsertMessage(message model.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertMessage", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertMessage indicates an expected call of InsertMessage.
func (mr *MockMessageRepositoryMockRecorder) InsertMessage(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertMessage", reflect.TypeOf((*MockMessageRepository)(nil).InsertMessage), message)
}
